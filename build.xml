<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="substance" default="all">
	<property file="local.build.properties" />
	<property file="build.properties" />

	<!-- Compiler options -->
	<patternset id="javac.excluded" />
	<patternset id="javac.resources">
		<include name="**/?*.properties" />
		<include name="**/?*.xml" />
		<include name="**/?*.gif" />
		<include name="**/?*.png" />
		<include name="**/?*.jpeg" />
		<include name="**/?*.jpg" />
		<include name="**/?*.ttf" />
		<include name="**/?*.license" />
		<include name="**/?*.colorscheme*" />
	</patternset>
	<!-- JDK definitions -->

	<path id="jdk.classpath">
		<fileset dir="${java.home}">
			<include name="jre/lib/charsets.jar" />
			<include name="jre/lib/deploy.jar" />
			<include name="jre/lib/javaws.jar" />
			<include name="jre/lib/jce.jar" />
			<include name="jre/lib/jsse.jar" />
			<include name="jre/lib/plugin.jar" />
			<include name="jre/lib/rt.jar" />
			<include name="jre/lib/ext/dnsns.jar" />
			<include name="jre/lib/ext/localedata.jar" />
			<include name="jre/lib/ext/sunjce_provider.jar" />
			<include name="jre/lib/ext/sunpkcs11.jar" />
		</fileset>
	</path>

	<property name="project.jdk.home" value="${java.home}" />
	<property name="project.jdk.classpath" value="jdk.classpath" />
	<!-- Project Libraries -->
	<!-- Global Libraries -->


	<dirname property="module.substance.basedir" file="${ant.file}" />

	<property name="javac.args.substance" value="${javac.args}" />

	<property name="substance.build.dir" value="${module.substance.basedir}/build/" />
	<property name="substance.output.dir" value="${substance.build.dir}/classes" />
	<property name="substance.drop.dir" value="${module.substance.basedir}/drop" />
	<property name="substance.lib.dir" value="${module.substance.basedir}/lib" />
	<property name="substance.src.dir" value="${module.substance.basedir}/src/" />
    <property name="substance.version" value="8.1.00-dev" />
    <property name="substance.versionKey" value="8.1.00dev Xanadu" />

    <property name="trident.version" value="1.5.00" />

	<path id="substance.module.bootclasspath">
		<!-- Paths to be included in compilation bootclasspath -->
	</path>

	<property name="module.jdk.home.substance" value="${project.jdk.home}" />
	<property name="module.jdk.classpath.substance" value="${project.jdk.classpath}" />

	<path id="substance.module.classpath">
		<path refid="${module.jdk.classpath.substance}" />
        <pathelement location="${substance.lib.dir}/trident-${trident.version}.jar" />
	</path>

	<patternset id="excluded.from.module.substance" />

	<patternset id="excluded.from.compilation.substance">
		<patternset refid="excluded.from.module.substance" />
		<patternset refid="javac.excluded" />
	</patternset>

	<path id="substance.module.sourcepath">
		<dirset dir="${substance.src.dir}">
			<include name="org/pushingpixels/substance" />
		</dirset>
	</path>

	<target name="compile.module.substance" depends="compile.module.substance.production" description="compile module substance" />

	<target name="compile.module.substance.production" description="compile module substance production classes">
		<mkdir dir="${substance.output.dir}" />
		<javac source="${javac.source}" target="${javac.target}" encoding="${javac.encoding}" destdir="${substance.output.dir}" debug="${javac.debug}" nowarn="${javac.generate.no.warnings}" memoryMaximumSize="${javac.max.memory}" fork="true">
			<compilerarg line="${javac.args.substance}" />
			<bootclasspath refid="substance.module.bootclasspath" />
			<classpath refid="substance.module.classpath" />
			<src refid="substance.module.sourcepath" />
			<patternset refid="excluded.from.compilation.substance" />
		</javac>
		<copy todir="${substance.output.dir}">
			<fileset dir="${substance.src.dir}">
				<patternset refid="javac.resources" />
				<type type="file" />
				<patternset refid="excluded.from.compilation.substance" />
			</fileset>
		</copy>
	</target>

	<target name="clean.module.substance" description="cleanup module">
		<delete dir="${substance.output.dir}" />
	</target>

	<target name="init" description="Build initialization">
		<!-- Perform any build initialization in this target -->
	</target>

	<target name="jar-bin" description="create runtime jar">
		<mkdir dir="${substance.drop.dir}" />
		<delete file="${substance.drop.dir}/${substance.version}/substance-${substance.version}.jar" />

		<jar compress="true" destfile="${substance.drop.dir}/${substance.version}/substance-${substance.version}.jar">
			<fileset dir="${substance.output.dir}/" excludes="**/*.svg" />
			<fileset dir="${module.substance.basedir}/" includes="resources/**" />
			<manifest>
				<attribute name="Substance-Distribution" value="Full" />
				<attribute name="Substance-Version" value="${substance.versionKey}" />
				<attribute name="Substance-BuildStamp" value="${build.time}" />
			</manifest>
		</jar>

	    <copy file="${substance.lib.dir}/trident-${trident.version}.jar" todir="${substance.drop.dir}/${substance.version}" />
    </target>

	<target name="jar-bin-lite" description="create runtime jar with no custom color choosers">
		<delete file="${substance.drop.dir}/${substance.version}/substance-lite-${substance.version}.jar" />
		<jar compress="true" destfile="${substance.drop.dir}/${substance.version}/substance-lite-${substance.version}.jar">
			<fileset dir="${substance.output.dir}/" excludes="**/*.svg org/pushingpixels/substance/internal/contrib/randelshofer/** org/pushingpixels/substance/internal/contrib/xoetrope/** org/pushingpixels/substance/internal/ui/SubstanceColorChooserUI*" />
			<fileset dir="${module.substance.basedir}/" includes="resources/**" />
			<manifest>
				<attribute name="Substance-Distribution" value="Lite" />
				<attribute name="Substance-Version" value="${substance.versionKey}" />
				<attribute name="Substance-BuildStamp" value="${build.time}" />
			</manifest>
		</jar>
	</target>

	<target name="timestamp">
		<tstamp>
			<format property="build.time" pattern="MMMM d, yyyy HH:mm:ss z" />
		</tstamp>
		<echo message="Beginning build: ${build.time}" />
		<echo message="Java home: ${java.home}" />
		<echo message="Java version: ${ant.java.version}" />
		<echo message="Ant version: ${ant.version}" />
		<echo message="JavaC home: ${java.home}" />
	</target>

	<target name="jar" depends="jar-bin, jar-bin-lite" description="create all jars" />

	<target name="distro" description="create distribution">
		<delete file="${module.substance.basedir}/substance-all.zip" />
		<zip destfile="${module.substance.basedir}/substance-all.zip" compress="true">
			<fileset dir="${module.substance.basedir}">
				<!--
				<include name="docs/**" />
				<include name="www/index.html" />
				<include name="www/see.html" />
				<include name="www/learn.html" />
				<include name="www/thanks.html" />
				<include name="www/docs/**" />
				<include name="www/images/*.png" />
				<include name="www/images/known-issues/**" />
				<include name="www/images/api/**" />
				<include name="www/images/clientprops/**" />
				<include name="www/images/screenshots/**" />
				<include name="www/images/themes/**" />
				<include name="www/images/flags/**" />
				<include name="www/images/walkthrough/**" />
				<include name="www/images/learn/**" />
				<include name="www/release-info/releases.html" />
				<include name="www/release-info/${substance.version}/**.png" />
				<include name="www/release-info/${substance.version}/**.htm*" />
				-->
				<include name="lib/**" />
				<include name="src/**" />
				<include name="build.properties" />
				<include name="build.xml" />
				<exclude name="**/*.vsd" />
			</fileset>
		</zip>
	</target>

	<target name="clean" depends="clean.module.substance" description="cleanup all" />

	<target name="all" depends="timestamp, init, clean, compile.module.substance, jar" description="build all" />
</project>